
using Fairweather.Service;

namespace Common.Sage
{
    public static partial class Sage_Fields
    {
        public static class SalesRecord
        {
            // autogenerated: C:\Users\Fairweather\Desktop\sage_strings.pl
            public static readonly Sage_Field
            ACCOUNT_MANAGER = String("ACCOUNT_MANAGER", "Name of Account Manager", 60) // Opt
            , ACCOUNT_ON_HOLD = SByte("ACCOUNT_ON_HOLD", "Account On Hold", 1) // Opt
            , ACCOUNT_OPENED = Date("ACCOUNT_OPENED", "Date Account Opened", 2) // Opt
            , ACCOUNT_REF = String("ACCOUNT_REF", "Account Reference", 8) // Req
            , ACCOUNT_STATUS = Short("ACCOUNT_STATUS", "Account Status", 2) // Opt
            , ACCOUNT_TYPE = Short("ACCOUNT_TYPE", "Account Type", 2) // Opt
            , ADDRESS_1 = String("ADDRESS_1", "Account Address Line 1", 60) // Opt
            , ADDRESS_2 = String("ADDRESS_2", "Account Address Line 2", 60) // Opt
            , ADDRESS_3 = String("ADDRESS_3", "Account Address Line 3", 60) // Opt
            , ADDRESS_4 = String("ADDRESS_4", "Account Address Line 4", 60) // Opt
            , ADDRESS_5 = String("ADDRESS_5", "Account Address Line 5", 60) // Opt
            , ANALYSIS_1 = String("ANALYSIS_1", "Analysis 1", 30) // Opt
            , ANALYSIS_2 = String("ANALYSIS_2", "Analysis 2", 30) // Opt
            , ANALYSIS_3 = String("ANALYSIS_3", "Analysis 3", 30) // Opt
            , BACS = Short("BACS", "Account Flagged for BACS", 2) // Opt
            , BACS_REFERENCE = String("BACS_REFERENCE", "Reference for BACS Transfer", 60) // Opt
            , BALANCE = Double("BALANCE", "Balance", 8) // Opt
            , BUILD_SOCIETY_REF = String("BUILD_SOCIETY_REF", "Reference for Building Society Transfer", 60) // Opt
            , BUILDING_SOCIETY = Short("BUILDING_SOCIETY", "Account uses Building Society", 2) // Opt
            , CAN_APPLY_CHARGES = Short("CAN_APPLY_CHARGES", "Can Charge Credit", 2) // Opt
            , CONTACT_NAME = String("CONTACT_NAME", "Contact Name", 30) // Opt
            , COUNTRY_CODE = String("COUNTRY_CODE", "Country Code", 2) // Opt
            , CREDIT_APP_RECEIVED = Short("CREDIT_APP_RECEIVED", "True if Credit Application Received", 2) // Opt
            , CREDIT_APPLIED_FOR = Date("CREDIT_APPLIED_FOR", "Date Credit Applied For", 2) // Opt
            , CREDIT_BF = Double("CREDIT_BF", "Credits Brought Forward", 8) // Opt
            , CREDIT_BUREAU = Short("CREDIT_BUREAU", "Credit Bureau Used", 2) // Opt
            , CREDIT_CARD_NO = String("CREDIT_CARD_NO", "Credit Card Number", 30) // Opt
            , CREDIT_CF = Double("CREDIT_CF", "Credits Carried Forward", 8) // Opt
            , CREDIT_LIMIT = Double("CREDIT_LIMIT", "Credit Limit", 8) // Opt
            , CREDIT_MTH1 = Double("CREDIT_MTH1", "Credit Month 1", 8) // Opt
            , CREDIT_MTH10 = Double("CREDIT_MTH10", "Credit Month 10", 8) // Opt
            , CREDIT_MTH11 = Double("CREDIT_MTH11", "Credit Month 11", 8) // Opt
            , CREDIT_MTH12 = Double("CREDIT_MTH12", "Credit Month 12", 8) // Opt
            , CREDIT_MTH2 = Double("CREDIT_MTH2", "Credit Month 2", 8) // Opt
            , CREDIT_MTH3 = Double("CREDIT_MTH3", "Credit Month 3", 8) // Opt
            , CREDIT_MTH4 = Double("CREDIT_MTH4", "Credit Month 4", 8) // Opt
            , CREDIT_MTH5 = Double("CREDIT_MTH5", "Credit Month 5", 8) // Opt
            , CREDIT_MTH6 = Double("CREDIT_MTH6", "Credit Month 6", 8) // Opt
            , CREDIT_MTH7 = Double("CREDIT_MTH7", "Credit Month 7", 8) // Opt
            , CREDIT_MTH8 = Double("CREDIT_MTH8", "Credit Month 8", 8) // Opt
            , CREDIT_MTH9 = Double("CREDIT_MTH9", "Credit Month 9", 8) // Opt
            , CREDIT_REFERENCE = String("CREDIT_REFERENCE", "Credit Bureau Reference", 60) // Opt
            , CURRENCY = SByte("CURRENCY", "Currency", 1) // Opt
            , DATE_CREDIT_APP_RECEIVED = Date("DATE_CREDIT_APP_RECEIVED", "Date Credit Application Recieved", 2) // Opt
            , DEF_NOM_CODE = String("DEF_NOM_CODE", "Default Nominal Code", 8) // Opt
            , DEF_TAX_CODE = Short("DEF_TAX_CODE", "Default Tax Code", 2) // Opt
            , DEL_ADDRESS_1 = String("DEL_ADDRESS_1", "Delivery Address Line 1", 60) // Opt
            , DEL_ADDRESS_2 = String("DEL_ADDRESS_2", "Delivery Address Line 2", 60) // Opt
            , DEL_ADDRESS_3 = String("DEL_ADDRESS_3", "Delivery Address Line 3", 60) // Opt
            , DEL_ADDRESS_4 = String("DEL_ADDRESS_4", "Delivery Address Line 4", 60) // Opt
            , DEL_ADDRESS_5 = String("DEL_ADDRESS_5", "Delivery Address Line 5", 60) // Opt
            , DEL_CONTACT_NAME = String("DEL_CONTACT_NAME", "Delivery Contact Name", 30) // Opt
            , DEL_FAX = String("DEL_FAX", "Delivery Fax Number", 30) // Opt
            , DEL_NAME = String("DEL_NAME", "Delivery Name", 60) // Opt
            , DEL_TELEPHONE = String("DEL_TELEPHONE", "Delivery Telephone Number", 30) // Opt
            , DELETED_FLAG = Short("DELETED_FLAG", "Reserved for Future Use", 2) // Opt
            , DEPT_NUMBER = Short("DEPT_NUMBER", "Department Number", 2) // Opt
            , DISCOUNT_RATE = Double("DISCOUNT_RATE", "Discount Rate", 8) // Opt
            , DISCOUNT_TYPE = SByte("DISCOUNT_TYPE", "Discount Type", 1) // Opt
            , E_MAIL = String("E_MAIL", "EMail Address", 255) // Opt
            , EC_CODE = String("EC_CODE", "EC Member Code", 3) // Opt
            , EXTERNAL_USAGE = Int("EXTERNAL_USAGE", "Number of External Usages for this Record", 4) // Opt
            , FAX = String("FAX", "Fax Number", 30) // Opt
            , FIRST_HEADER = Int("FIRST_HEADER", "Record Number of First Transaction", 4) // Opt
            , FIRST_INVOICE = Date("FIRST_INVOICE", "First Invoice Date", 2) // Opt
            , HOLD_MAIL = Short("HOLD_MAIL", "Restrict Mail", 2) // Opt
            , INVOICE_BF = Double("INVOICE_BF", "Invoices Brought Forward", 8) // Opt
            , INVOICE_CF = Double("INVOICE_CF", "Invoices Carry Forward", 8) // Opt
            , INVOICE_MTH1 = Double("INVOICE_MTH1", "Invoices Month 1", 8) // Opt
            , INVOICE_MTH10 = Double("INVOICE_MTH10", "Invoices Month 10", 8) // Opt
            , INVOICE_MTH11 = Double("INVOICE_MTH11", "Invoices Month 11", 8) // Opt
            , INVOICE_MTH12 = Double("INVOICE_MTH12", "Invoices Month 12", 8) // Opt
            , INVOICE_MTH2 = Double("INVOICE_MTH2", "Invoices Month 2", 8) // Opt
            , INVOICE_MTH3 = Double("INVOICE_MTH3", "Invoices Month 3", 8) // Opt
            , INVOICE_MTH4 = Double("INVOICE_MTH4", "Invoices Month 4", 8) // Opt
            , INVOICE_MTH5 = Double("INVOICE_MTH5", "Invoices Month 5", 8) // Opt
            , INVOICE_MTH6 = Double("INVOICE_MTH6", "Invoices Month 6", 8) // Opt
            , INVOICE_MTH7 = Double("INVOICE_MTH7", "Invoices Month 7", 8) // Opt
            , INVOICE_MTH8 = Double("INVOICE_MTH8", "Invoices Month 8", 8) // Opt
            , INVOICE_MTH9 = Double("INVOICE_MTH9", "Invoices Month 9", 8) // Opt
            , LAST_CREDIT_REV = Date("LAST_CREDIT_REV", "Date Last Credit Review", 2) // Opt
            , LAST_HEADER = Int("LAST_HEADER", "Record Number of Last Transaction", 4) // Opt
            , LAST_INV_DATE = Date("LAST_INV_DATE", "Last Invoice Date", 2) // Opt
            , LAST_PAY_DATE = Date("LAST_PAY_DATE", "Last Payment Date", 2) // Opt
            , MEMO_OFFSET = Int("MEMO_OFFSET", "Offset in Credit Memo File", 4) // Opt
            , MEMO_SIZE = Int("MEMO_SIZE", "Size of Memo in bytes", 4) // Opt
            , MODIFY = Int("MODIFY", "Modified Count", 4) // Opt
            , NAME = String("NAME", "Account Name", 60) // Opt
            , NEXT_CREDIT_REV = Date("NEXT_CREDIT_REV", "Date Next Credit Review", 2) // Opt
            , NO_OF_HEADER = Int("NO_OF_HEADER", "Number of Transactions", 4) // Opt
            , OVERRIDE_PRODUCT_TAX = SByte("OVERRIDE_PRODUCT_TAX", "Override Product Tax Code in Invoicing", 1) // Opt
            , PAYMENT_BF = Double("PAYMENT_BF", "Payments Brought Forward", 8) // Opt
            , PAYMENT_CF = Double("PAYMENT_CF", "Payments Carry Forward", 8) // Opt
            , PAYMENT_DUE_DAYS = Short("PAYMENT_DUE_DAYS", "Payment Due Days", 2) // Opt
            , PAYMENT_MTH1 = Double("PAYMENT_MTH1", "Payments Month 1", 8) // Opt
            , PAYMENT_MTH10 = Double("PAYMENT_MTH10", "Payments Month 10", 8) // Opt
            , PAYMENT_MTH11 = Double("PAYMENT_MTH11", "Payments Month 11", 8) // Opt
            , PAYMENT_MTH12 = Double("PAYMENT_MTH12", "Payments Month 12", 8) // Opt
            , PAYMENT_MTH2 = Double("PAYMENT_MTH2", "Payments Month 2", 8) // Opt
            , PAYMENT_MTH3 = Double("PAYMENT_MTH3", "Payments Month 3", 8) // Opt
            , PAYMENT_MTH4 = Double("PAYMENT_MTH4", "Payments Month 4", 8) // Opt
            , PAYMENT_MTH5 = Double("PAYMENT_MTH5", "Payments Month 5", 8) // Opt
            , PAYMENT_MTH6 = Double("PAYMENT_MTH6", "Payments Month 6", 8) // Opt
            , PAYMENT_MTH7 = Double("PAYMENT_MTH7", "Payments Month 7", 8) // Opt
            , PAYMENT_MTH8 = Double("PAYMENT_MTH8", "Payments Month 8", 8) // Opt
            , PAYMENT_MTH9 = Double("PAYMENT_MTH9", "Payments Month 9", 8) // Opt
            , PRICE_LIST_REF = String("PRICE_LIST_REF", "Price List Reference", 60) // Opt
            , PRIOR_YEAR = Double("PRIOR_YEAR", "Prior YTD", 8) // Opt
            , SALES_REP = String("SALES_REP", "Name of Sales Representative", 60) // Opt
            , SETTLEMENT_DISC_RATE = Double("SETTLEMENT_DISC_RATE", "Settlement Discount Rate", 8) // Opt
            , SETTLEMENT_DUE_DAYS = Short("SETTLEMENT_DUE_DAYS", "Settlement Due Days", 2) // Opt
            , TELEPHONE = String("TELEPHONE", "Telephone Number", 30) // Opt
            , TELEPHONE_2 = String("TELEPHONE_2", "Second Telephone Number", 30) // Opt
            , TERMS = String("TERMS", "Terms", 30) // Opt
            , TERMS_AGREED_FLAG = Short("TERMS_AGREED_FLAG", "Terms Agreed Flag", 2) // Opt
            , TRADE_CONTACT = String("TRADE_CONTACT", "Name of Trade Contact", 30) // Opt
            , TURNOVER_MTD = Double("TURNOVER_MTD", "Turnover Month To Date", 8) // Opt
            , TURNOVER_YTD = Double("TURNOVER_YTD", "Turnover Year Date", 8) // Opt
            , VAT_REG_NUMBER = String("VAT_REG_NUMBER", "VAT Registration Number", 30) // Opt
            , WWW = String("WWW", "WWW Address", 255) // Opt
            ;

            static public readonly Dict_ro<string, Sage_Field>
            Fields = Make(ACCOUNT_MANAGER
            , ACCOUNT_ON_HOLD
            , ACCOUNT_OPENED
            , ACCOUNT_REF
            , ACCOUNT_STATUS
            , ACCOUNT_TYPE
            , ADDRESS_1
            , ADDRESS_2
            , ADDRESS_3
            , ADDRESS_4
            , ADDRESS_5
            , ANALYSIS_1
            , ANALYSIS_2
            , ANALYSIS_3
            , BACS
            , BACS_REFERENCE
            , BALANCE
            , BUILD_SOCIETY_REF
            , BUILDING_SOCIETY
            , CAN_APPLY_CHARGES
            , CONTACT_NAME
            , COUNTRY_CODE
            , CREDIT_APP_RECEIVED
            , CREDIT_APPLIED_FOR
            , CREDIT_BF
            , CREDIT_BUREAU
            , CREDIT_CARD_NO
            , CREDIT_CF
            , CREDIT_LIMIT
            , CREDIT_MTH1
            , CREDIT_MTH10
            , CREDIT_MTH11
            , CREDIT_MTH12
            , CREDIT_MTH2
            , CREDIT_MTH3
            , CREDIT_MTH4
            , CREDIT_MTH5
            , CREDIT_MTH6
            , CREDIT_MTH7
            , CREDIT_MTH8
            , CREDIT_MTH9
            , CREDIT_REFERENCE
            , CURRENCY
            , DATE_CREDIT_APP_RECEIVED
            , DEF_NOM_CODE
            , DEF_TAX_CODE
            , DEL_ADDRESS_1
            , DEL_ADDRESS_2
            , DEL_ADDRESS_3
            , DEL_ADDRESS_4
            , DEL_ADDRESS_5
            , DEL_CONTACT_NAME
            , DEL_FAX
            , DEL_NAME
            , DEL_TELEPHONE
            , DELETED_FLAG
            , DEPT_NUMBER
            , DISCOUNT_RATE
            , DISCOUNT_TYPE
            , E_MAIL
            , EC_CODE
            , EXTERNAL_USAGE
            , FAX
            , FIRST_HEADER
            , FIRST_INVOICE
            , HOLD_MAIL
            , INVOICE_BF
            , INVOICE_CF
            , INVOICE_MTH1
            , INVOICE_MTH10
            , INVOICE_MTH11
            , INVOICE_MTH12
            , INVOICE_MTH2
            , INVOICE_MTH3
            , INVOICE_MTH4
            , INVOICE_MTH5
            , INVOICE_MTH6
            , INVOICE_MTH7
            , INVOICE_MTH8
            , INVOICE_MTH9
            , LAST_CREDIT_REV
            , LAST_HEADER
            , LAST_INV_DATE
            , LAST_PAY_DATE
            , MEMO_OFFSET
            , MEMO_SIZE
            , MODIFY
            , NAME
            , NEXT_CREDIT_REV
            , NO_OF_HEADER
            , OVERRIDE_PRODUCT_TAX
            , PAYMENT_BF
            , PAYMENT_CF
            , PAYMENT_DUE_DAYS
            , PAYMENT_MTH1
            , PAYMENT_MTH10
            , PAYMENT_MTH11
            , PAYMENT_MTH12
            , PAYMENT_MTH2
            , PAYMENT_MTH3
            , PAYMENT_MTH4
            , PAYMENT_MTH5
            , PAYMENT_MTH6
            , PAYMENT_MTH7
            , PAYMENT_MTH8
            , PAYMENT_MTH9
            , PRICE_LIST_REF
            , PRIOR_YEAR
            , SALES_REP
            , SETTLEMENT_DISC_RATE
            , SETTLEMENT_DUE_DAYS
            , TELEPHONE
            , TELEPHONE_2
            , TERMS
            , TERMS_AGREED_FLAG
            , TRADE_CONTACT
            , TURNOVER_MTD
            , TURNOVER_YTD
            , VAT_REG_NUMBER
            , WWW
            );
        }
    }
}
