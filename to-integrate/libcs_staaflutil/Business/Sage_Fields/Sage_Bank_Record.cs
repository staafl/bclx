using System.Collections.Generic;

using Fairweather.Service;

namespace Common.Sage
{
    public static partial class Sage_Fields
    {
        static public class BankRecord
        {
            // autogenerated: C:\Users\Fairweather\Desktop\codegen\sage_strings.pl
            static public readonly Sage_Field
            ACCOUNT_NAME = String("ACCOUNT_NAME", "Bank Account Name", 60) // Opt
            , ACCOUNT_NUMBER = String("ACCOUNT_NUMBER", "Bank Account Number", 20) // Opt
            , ACCOUNT_REF = String("ACCOUNT_REF", "Account Reference", 8) // Req
            , ACCOUNT_TYPE = SByte("ACCOUNT_TYPE", "Account Type", 1) // Opt
            , ADDRESS_1 = String("ADDRESS_1", "Address Line 1", 60) // Opt
            , ADDRESS_2 = String("ADDRESS_2", "Address Line 2", 60) // Opt
            , ADDRESS_3 = String("ADDRESS_3", "Address Line 3", 60) // Opt
            , ADDRESS_4 = String("ADDRESS_4", "Address Line 4", 60) // Opt
            , ADDRESS_5 = String("ADDRESS_5", "Address Line 5", 60) // Opt
            , BANK_REF = Short("BANK_REF", "Bank Reference Number", 2) // Opt
            , CONTACT_NAME = String("CONTACT_NAME", "Bank Contact Name", 30) // Opt
            , CURRENCY = SByte("CURRENCY", "Currency Code", 1) // Opt
            , DELETED_FLAG = Short("DELETED_FLAG", "Is Deleted", 2) // Opt
            , E_MAIL = String("E_MAIL", "Bank EMail Address", 255) // Opt
            , ELEC_TRANS = Short("ELEC_TRANS", "Bank Accepts Electronic Payments", 2) // Opt
            , EXPIRY_DATE = Short("EXPIRY_DATE", "Card Expiry Date", 2) // Opt
            , EXTERNAL_USAGE = Int("EXTERNAL_USAGE", "Number of External Usages", 4) // Opt
            , FAX = String("FAX", "Bank Fax Number", 30) // Opt
            , FIRST_SPLIT = Int("FIRST_SPLIT", "First Transaction", 4) // Opt
            , FOREIGN_BALANCE = Double("FOREIGN_BALANCE", "Foreign Balance", 8) // Opt
            , LAST_SPLIT = Int("LAST_SPLIT", "Last Transaction", 4) // Opt
            , NAME = String("NAME", "Name", 60) // Opt
            , NEXT_CHQ_NO = String("NEXT_CHQ_NO", "Next Cheque Number", 10) // Opt
            , NEXT_DEP_NO = String("NEXT_DEP_NO", "Next Deposit Number", 6) // Opt
            , NEXT_WITHDRAWAL_NO = String("NEXT_WITHDRAWAL_NO", "Next Withdrawal Number", 6) // Opt
            , NO_OF_SPLIT = Int("NO_OF_SPLIT", "Number of Splits", 4) // Opt
            , NO_OF_TRAN = Int("NO_OF_TRAN", "Number of Transactions", 4) // Opt
            , NO_OF_UNRECONCILED_ITEMS = Int("NO_OF_UNRECONCILED_ITEMS", "No of Unreconciled Items", 4) // Opt
            , NO_RECONCILIATION_FLAG = SByte("NO_RECONCILIATION_FLAG", "Ignore Reconciliation", 1) // Opt
            , OVERDRAFT_LIMIT = Double("OVERDRAFT_LIMIT", "Overdraft Limit", 8) // Opt
            , SORT_CODE = String("SORT_CODE", "Bank Sort Code", 10) // Opt
            , TELEPHONE = String("TELEPHONE", "Bank Telephone Number", 30) // Opt
            , WWW = String("WWW", "Bank Web Site", 255) // Opt
            ;

            public static Dict_ro<string, Sage_Field>
            Fields { get { return fields; } }

            static readonly Dict_ro<string, Sage_Field>
            fields = Make(ACCOUNT_NAME
            , ACCOUNT_NUMBER
            , ACCOUNT_REF
            , ACCOUNT_TYPE
            , ADDRESS_1
            , ADDRESS_2
            , ADDRESS_3
            , ADDRESS_4
            , ADDRESS_5
            , BANK_REF
            , CONTACT_NAME
            , CURRENCY
            , DELETED_FLAG
            , E_MAIL
            , ELEC_TRANS
            , EXPIRY_DATE
            , EXTERNAL_USAGE
            , FAX
            , FIRST_SPLIT
            , FOREIGN_BALANCE
            , LAST_SPLIT
            , NAME
            , NEXT_CHQ_NO
            , NEXT_DEP_NO
            , NEXT_WITHDRAWAL_NO
            , NO_OF_SPLIT
            , NO_OF_TRAN
            , NO_OF_UNRECONCILED_ITEMS
            , NO_RECONCILIATION_FLAG
            , OVERDRAFT_LIMIT
            , SORT_CODE
            , TELEPHONE
            , WWW
            );
        }
    }
}
