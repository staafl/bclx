using System;
namespace Versioning
{
    public class StockTran : Sage_Container, IMove
    {
        /* Autogenerated by sage_wrapper_generator.pl */
        SageDataObject110.StockTran str11;
        SageDataObject120.StockTran str12;
        SageDataObject130.StockTran str13;
        SageDataObject140.StockTran str14;
        SageDataObject150.StockTran str15;
        SageDataObject160.StockTran str16;
        SageDataObject170.StockTran str17;

        public StockTran(object inner, int version)
            : base(version) {
            switch (m_version) {
                case 11: {
                        str11 = (SageDataObject110.StockTran)inner;
                        m_fields = new Fields(str11.Fields,m_version);
                        return;
                    }

                case 12: {
                        str12 = (SageDataObject120.StockTran)inner;
                        m_fields = new Fields(str12.Fields,m_version);
                        return;
                    }

                case 13: {
                        str13 = (SageDataObject130.StockTran)inner;
                        m_fields = new Fields(str13.Fields,m_version);
                        return;
                    }

                case 14: {
                        str14 = (SageDataObject140.StockTran)inner;
                        m_fields = new Fields(str14.Fields,m_version);
                        return;
                    }

                case 15: {
                        str15 = (SageDataObject150.StockTran)inner;
                        m_fields = new Fields(str15.Fields,m_version);
                        return;
                    }
                case 16: {
                        str16 = (SageDataObject160.StockTran)inner;
                        m_fields = new Fields(str16.Fields,m_version);
                        return;
                    }
                case 17: {
                        str17 = (SageDataObject170.StockTran)inner;
                        m_fields = new Fields(str17.Fields,m_version);
                        return;
                    }

                default: throw new InvalidOperationException("ver");
            }
        }
        /* Autogenerated with record_generator.pl */
        const string ACCOUNT_REF = "ACCOUNT_REF";
        const string STOCKTRAN = "StockTran";

        public int Count {
            get {
                int ret;
                switch (m_version) {
                    case 11: {
                            ret = str11.Count;
                            break;
                        }

                    case 12: {
                            ret = str12.Count;
                            break;
                        }

                    case 13: {
                            ret = str13.Count;
                            break;
                        }

                    case 14: {
                            ret = str14.Count;
                            break;
                        }

                    case 15: {
                            ret = str15.Count;
                            break;
                        }
                    case 16: {
                            ret = str16.Count;
                            break;
                        }
                    case 17: {
                            ret = str17.Count;
                            break;
                        }

                    default: throw new InvalidOperationException("ver");
                }
                return ret;
            }
            //set {
            //    switch (m_version) {
            //        case 11: {
            //                str11.Count = value;
            //                break;
            //            }

            //        case 12: {
            //                str12.Count = value;
            //                break;
            //            }

            //        case 13: {
            //                str13.Count = value;
            //                break;
            //            }

            //        case 14: {
            //                str14.Count = value;
            //                break;
            //            }

            //        case 15: {
            //                str15.Count = value;
            //                break;
            //            }
            //        case 16: {
            //                str16.Count = value;
            //                break;
            //            }
            //        case 17: {
            //                str17.Count = value;
            //                break;
            //            }
            //        default: throw new InvalidOperationException("ver");
            //    }
            //}
        }
        public int RecordNumber {
            get {
                int ret;
                switch (m_version) {
                    case 11: {
                            ret = str11.RecordNumber;
                            break;
                        }

                    case 12: {
                            ret = str12.RecordNumber;
                            break;
                        }

                    case 13: {
                            ret = str13.RecordNumber;
                            break;
                        }

                    case 14: {
                            ret = str14.RecordNumber;
                            break;
                        }

                    case 15: {
                            ret = str15.RecordNumber;
                            break;
                        }
                    case 16: {
                            ret = str16.RecordNumber;
                            break;
                        }
                    case 17: {
                            ret = str17.RecordNumber;
                            break;
                        }

                    default: throw new InvalidOperationException("ver");
                }
                return ret;
            }
        }


        ///
        //public bool AddNew() {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = str11.AddNew();
        //            break;
        //        }

        //    case 12: {
        //            ret = str12.AddNew();
        //            break;
        //        }

        //    case 13: {
        //            ret = str13.AddNew();
        //            break;
        //        }

        //    case 14: {
        //            ret = str14.AddNew();
        //            break;
        //        }

        //    case 15: {
        //            ret = str15.AddNew();
        //            break;
        //        }
        //    case 16: {
        //            ret = str16.AddNew();
        //            break;
        //        }
        //    case 17: {
        //            ret = str17.AddNew();
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Update() {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = str11.Update();
        //            break;
        //        }

        //    case 12: {
        //            ret = str12.Update();
        //            break;
        //        }

        //    case 13: {
        //            ret = str13.Update();
        //            break;
        //        }

        //    case 14: {
        //            ret = str14.Update();
        //            break;
        //        }

        //    case 15: {
        //            ret = str15.Update();
        //            break;
        //        }
        //    case 16: {
        //            ret = str16.Update();
        //            break;
        //        }
        //    case 17: {
        //            ret = str17.Update();
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Edit() {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = str11.Edit();
        //            break;
        //        }

        //    case 12: {
        //            ret = str12.Edit();
        //            break;
        //        }

        //    case 13: {
        //            ret = str13.Edit();
        //            break;
        //        }

        //    case 14: {
        //            ret = str14.Edit();
        //            break;
        //        }

        //    case 15: {
        //            ret = str15.Edit();
        //            break;
        //        }
        //    case 16: {
        //            ret = str16.Edit();
        //            break;
        //        }
        //    case 17: {
        //            ret = str17.Edit();
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Find(bool partial) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = str11.Find(partial);
        //            break;
        //        }

        //    case 12: {
        //            ret = str12.Find(partial);
        //            break;
        //        }

        //    case 13: {
        //            ret = str13.Find(partial);
        //            break;
        //        }

        //    case 14: {
        //            ret = str14.Find(partial);
        //            break;
        //        }

        //    case 15: {
        //            ret = str15.Find(partial);
        //            break;
        //        }
        //    case 16: {
        //            ret = str16.Find(partial);
        //            break;
        //        }
        //    case 17: {
        //            ret = str17.Find(partial);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //
        public bool MoveFirst() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = str11.MoveFirst();
                        break;
                    }

                case 12: {
                        ret = str12.MoveFirst();
                        break;
                    }

                case 13: {
                        ret = str13.MoveFirst();
                        break;
                    }

                case 14: {
                        ret = str14.MoveFirst();
                        break;
                    }

                case 15: {
                        ret = str15.MoveFirst();
                        break;
                    }
                case 16: {
                        ret = str16.MoveFirst();
                        break;
                    }
                case 17: {
                        ret = str17.MoveFirst();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveNext() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = str11.MoveNext();
                        break;
                    }

                case 12: {
                        ret = str12.MoveNext();
                        break;
                    }

                case 13: {
                        ret = str13.MoveNext();
                        break;
                    }

                case 14: {
                        ret = str14.MoveNext();
                        break;
                    }

                case 15: {
                        ret = str15.MoveNext();
                        break;
                    }
                case 16: {
                        ret = str16.MoveNext();
                        break;
                    }
                case 17: {
                        ret = str17.MoveNext();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveLast() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = str11.MoveLast();
                        break;
                    }

                case 12: {
                        ret = str12.MoveLast();
                        break;
                    }

                case 13: {
                        ret = str13.MoveLast();
                        break;
                    }

                case 14: {
                        ret = str14.MoveLast();
                        break;
                    }

                case 15: {
                        ret = str15.MoveLast();
                        break;
                    }
                case 16: {
                        ret = str16.MoveLast();
                        break;
                    }
                case 17: {
                        ret = str17.MoveLast();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MovePrev() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = str11.MovePrev();
                        break;
                    }

                case 12: {
                        ret = str12.MovePrev();
                        break;
                    }

                case 13: {
                        ret = str13.MovePrev();
                        break;
                    }

                case 14: {
                        ret = str14.MovePrev();
                        break;
                    }

                case 15: {
                        ret = str15.MovePrev();
                        break;
                    }
                case 16: {
                        ret = str16.MovePrev();
                        break;
                    }
                case 17: {
                        ret = str17.MovePrev();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Write(int RecNo) {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = str11.Write(RecNo);
                        break;
                    }

                case 12: {
                        ret = str12.Write(RecNo);
                        break;
                    }

                case 13: {
                        ret = str13.Write(RecNo);
                        break;
                    }

                case 14: {
                        ret = str14.Write(RecNo);
                        break;
                    }

                case 15: {
                        ret = str15.Write(RecNo);
                        break;
                    }
                case 16: {
                        ret = str16.Write(RecNo);
                        break;
                    }
                case 17: {
                        ret = str17.Write(RecNo);
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }

        //public bool CanRemove() {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = str11.CanRemove();
        //            break;
        //        }

        //    case 12: {
        //            ret = str12.CanRemove();
        //            break;
        //        }

        //    case 13: {
        //            ret = str13.CanRemove();
        //            break;
        //        }

        //    case 14: {
        //            ret = str14.CanRemove();
        //            break;
        //        }

        //    case 15: {
        //            ret = str15.CanRemove();
        //            break;
        //        }
        //    case 16: {
        //            ret = str16.CanRemove();
        //            break;
        //        }
        //    case 17: {
        //            ret = str17.CanRemove();
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Remove() {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = str11.Remove();
        //            break;
        //        }

        //    case 12: {
        //            ret = str12.Remove();
        //            break;
        //        }

        //    case 13: {
        //            ret = str13.Remove();
        //            break;
        //        }

        //    case 14: {
        //            ret = str14.Remove();
        //            break;
        //        }

        //    case 15: {
        //            ret = str15.Remove();
        //            break;
        //        }
        //    case 16: {
        //            ret = str16.Remove();
        //            break;
        //        }
        //    case 17: {
        //            ret = str17.Remove();
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public object Link {
        //    get {
        //        object ret;
        //        switch (m_version) {
        //        case 11: {
        //                ret = str11.Link;
        //                break;
        //            }

        //        case 12: {
        //                ret = str12.Link;
        //                break;
        //            }

        //        case 13: {
        //                ret = str13.Link;
        //                break;
        //            }

        //        case 14: {
        //                ret = str14.Link;
        //                break;
        //            }

        //        case 15: {
        //                ret = str15.Link;
        //                break;
        //            }
        //        case 16: {
        //                ret = str16.Link;
        //                break;
        //            }
        //        case 17: {
        //                ret = str17.Link;
        //                break;
        //            }

        //        default: throw new InvalidOperationException("ver");
        //        }
        //        return ret;
        //    }
        //    set {
        //        switch (m_version) {
        //        case 11: {
        //                str11.Link = value;
        //                break;
        //            }

        //        case 12: {
        //                str12.Link = value;
        //                break;
        //            }

        //        case 13: {
        //                str13.Link = value;
        //                break;
        //            }

        //        case 14: {
        //                str14.Link = value;
        //                break;
        //            }

        //        case 15: {
        //                str15.Link = value;
        //                break;
        //            }
        //        case 16: {
        //                str16.Link = value;
        //                break;
        //            }
        //        case 17: {
        //                str17.Link = value;
        //                break;
        //            }

        //        }
        //    }
        //}
        //
        public bool FindFirst(object varField, object varSearch) {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = str11.FindFirst(varField, varSearch);
                        break;
                    }

                case 12: {
                        ret = str12.FindFirst(varField, varSearch);
                        break;
                    }

                case 13: {
                        ret = str13.FindFirst(varField, varSearch);
                        break;
                    }

                case 14: {
                        ret = str14.FindFirst(varField, varSearch);
                        break;
                    }

                case 15: {
                        ret = str15.FindFirst(varField, varSearch);
                        break;
                    }
                case 16: {
                        ret = str16.FindFirst(varField, varSearch);
                        break;
                    }
                case 17: {
                        ret = str17.FindFirst(varField, varSearch);
                        break;
                    }

                default: throw new InvalidOperationException("m_version");
            }
            return ret;
        }
        public bool FindNext(object varField, object varSearch) {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = str11.FindNext(varField, varSearch);
                        break;
                    }

                case 12: {
                        ret = str12.FindNext(varField, varSearch);
                        break;
                    }

                case 13: {
                        ret = str13.FindNext(varField, varSearch);
                        break;
                    }

                case 14: {
                        ret = str14.FindNext(varField, varSearch);
                        break;
                    }

                case 15: {
                        ret = str15.FindNext(varField, varSearch);
                        break;
                    }
                case 16: {
                        ret = str16.FindNext(varField, varSearch);
                        break;
                    }
                case 17: {
                        ret = str17.FindNext(varField, varSearch);
                        break;
                    }

                default: throw new InvalidOperationException("m_version");
            }
            return ret;
        }
    }
}
