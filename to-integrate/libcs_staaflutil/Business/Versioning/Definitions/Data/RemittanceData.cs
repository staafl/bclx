using System;
namespace Versioning
{
    using System.Reflection;

    public class RemittanceData : Sage_Container, IData
    {
        /* Autogenerated by sage_wrapper_generator.pl */
        SageDataObject110.RemittanceData rd11;
        SageDataObject120.RemittanceData rd12;
        SageDataObject130.RemittanceData rd13;
        SageDataObject140.RemittanceData rd14;
        SageDataObject150.RemittanceData rd15;
        SageDataObject160.RemittanceData rd16;
        SageDataObject170.RemittanceData rd17;


        public RemittanceData(object inner, int version)
            : base(version) {
            switch (m_version) {
            case 11:
                rd11 = (SageDataObject110.RemittanceData)inner;
                _type = rd11.GetType();
                _object = rd11;
                break;
            case 12:
                rd12 = (SageDataObject120.RemittanceData)inner;
                _type = rd12.GetType();
                _object = rd12;

                break;
            case 13:
                rd13 = (SageDataObject130.RemittanceData)inner;
                _type = rd13.GetType();
                _object = rd13;

                break;
            case 14:
                rd14 = (SageDataObject140.RemittanceData)inner;
                _type = rd14.GetType();
                _object = rd14;

                break;
            case 15:
                rd15 = (SageDataObject150.RemittanceData)inner;
                _type = rd15.GetType();
                _object = rd15;

                break;
            case 16:
                rd16 = (SageDataObject160.RemittanceData)inner;
                _type = rd16.GetType();
                _object = rd16;

                break;
            case 17:
                rd17 = (SageDataObject170.RemittanceData)inner;
                _type = rd17.GetType();
                _object = rd17;

                break;
            default: throw new InvalidOperationException("ver");

            }
            m_fields = new Fields(_type.InvokeMember("Fields", BindingFlags.GetProperty, null, _object, new Object[0]), m_version);

        }

        /* Autogenerated with data_generator.pl */
        const string ACCOUNT_REF = "ACCOUNT_REF";
        const string REMITTANCEDATA = "RemittanceData";


                //public bool Open(OpenMode mode) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.Open((SageDataObject110.OpenMode)mode);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.Open((SageDataObject120.OpenMode)mode);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.Open((SageDataObject130.OpenMode)mode);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.Open((SageDataObject140.OpenMode)mode);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.Open((SageDataObject150.OpenMode)mode);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.Open((SageDataObject160.OpenMode)mode);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.Open((SageDataObject170.OpenMode)mode);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public void Close() {
        //    switch (m_version) {
        //    case 11: {
        //            rd11.Close();
        //            break;
        //        }

        //    case 12: {
        //            rd12.Close();
        //            break;
        //        }

        //    case 13: {
        //            rd13.Close();
        //            break;
        //        }

        //    case 14: {
        //            rd14.Close();
        //            break;
        //        }

        //    case 15: {
        //            rd15.Close();
        //            break;
        //        }
        //    case 16: {
        //            rd16.Close();
        //            break;
        //        }
        //    case 17: {
        //            rd17.Close();
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }

        //}
        //public bool Read(int IRecNo) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.Read(IRecNo);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.Read(IRecNo);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.Read(IRecNo);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.Read(IRecNo);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.Read(IRecNo);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.Read(IRecNo);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.Read(IRecNo);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Write(int IRecNo) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.Write(IRecNo);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.Write(IRecNo);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.Write(IRecNo);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.Write(IRecNo);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.Write(IRecNo);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.Write(IRecNo);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.Write(IRecNo);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Seek(int IRecNo) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.Seek(IRecNo);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.Seek(IRecNo);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.Seek(IRecNo);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.Seek(IRecNo);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.Seek(IRecNo);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.Seek(IRecNo);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.Seek(IRecNo);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Lock(int IRecNo) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.Lock(IRecNo);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.Lock(IRecNo);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.Lock(IRecNo);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.Lock(IRecNo);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.Lock(IRecNo);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.Lock(IRecNo);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.Lock(IRecNo);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool Unlock(int IRecNo) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.Unlock(IRecNo);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.Unlock(IRecNo);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.Unlock(IRecNo);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.Unlock(IRecNo);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.Unlock(IRecNo);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.Unlock(IRecNo);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.Unlock(IRecNo);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool FindFirst(object varField, object varSearch) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.FindFirst(varField, varSearch);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.FindFirst(varField, varSearch);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.FindFirst(varField, varSearch);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.FindFirst(varField, varSearch);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.FindFirst(varField, varSearch);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.FindFirst(varField, varSearch);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.FindFirst(varField, varSearch);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public bool FindNext(object varField, object varSearch) {
        //    bool ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.FindNext(varField, varSearch);
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.FindNext(varField, varSearch);
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.FindNext(varField, varSearch);
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.FindNext(varField, varSearch);
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.FindNext(varField, varSearch);
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.FindNext(varField, varSearch);
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.FindNext(varField, varSearch);
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        //public int Count{get {
        //    int ret;
        //    switch (m_version) {
        //    case 11: {
        //            ret = rd11.Count();
        //            break;
        //        }

        //    case 12: {
        //            ret = rd12.Count();
        //            break;
        //        }

        //    case 13: {
        //            ret = rd13.Count();
        //            break;
        //        }

        //    case 14: {
        //            ret = rd14.Count();
        //            break;
        //        }

        //    case 15: {
        //            ret = rd15.Count();
        //            break;
        //        }
        //    case 16: {
        //            ret = rd16.Count();
        //            break;
        //        }
        //    case 17: {
        //            ret = rd17.Count();
        //            break;
        //        }

        //    default: throw new InvalidOperationException("ver");
        //    }
        //    return ret;
        //}
        Type _type;
        Object _object;

        public bool Open(OpenMode mode) {
            return (bool)_type.InvokeMember("Open", BindingFlags.InvokeMethod, null, _object, new Object[] { (SageDataObject110.OpenMode)mode });
        }

        public void Close() {
            _type.InvokeMember("Close", BindingFlags.InvokeMethod, null, _object, new Object[0]);
        }
        public int Count {
            get {

                return (int)_type.InvokeMember("Count", BindingFlags.InvokeMethod, null, _object, new Object[0]);

            }
        }
        public bool Read(int IRecNo) {
            return (bool)_type.InvokeMember("Read", BindingFlags.InvokeMethod, null, _object, new Object[] { IRecNo });

        }
        public bool Write(int IRecNo) {
            return (bool)_type.InvokeMember("Write", BindingFlags.InvokeMethod, null, _object, new Object[] { IRecNo });
        }
    }
}