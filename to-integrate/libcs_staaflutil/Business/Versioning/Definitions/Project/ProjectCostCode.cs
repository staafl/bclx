
using System;

namespace Versioning
{
    public class ProjectCostCode : Sage_Object
    {
        /* Autogenerated by sage_wrapper_generator.pl */
        SageDataObject120.ProjectCostCode cc12;
        SageDataObject130.ProjectCostCode cc13;
        SageDataObject140.ProjectCostCode cc14;
        SageDataObject150.ProjectCostCode cc15;
        SageDataObject160.ProjectCostCode cc16;
        SageDataObject170.ProjectCostCode cc17;




        public ProjectCostCode(object inner, int version)
            : base(version) {
            this.Inner = inner;

            switch (m_version) {
                case 12: {
                        cc12 = (SageDataObject120.ProjectCostCode)inner;
                        return;
                    }

                case 13: {
                        cc13 = (SageDataObject130.ProjectCostCode)inner;
                        return;
                    }

                case 14: {
                        cc14 = (SageDataObject140.ProjectCostCode)inner;
                        return;
                    }

                case 15: {
                        cc15 = (SageDataObject150.ProjectCostCode)inner;
                        return;
                    }
                case 16: {
                        cc16 = (SageDataObject160.ProjectCostCode)inner;
                        return;
                    }
                case 17: {
                        cc17 = (SageDataObject170.ProjectCostCode)inner;
                        return;
                    }

                default: throw new InvalidOperationException("ver");
            }
        }

        public bool Delete() {
            switch (m_version) {
                case 12: return cc12.Delete();
                case 13: return cc13.Delete();
                case 14: return cc14.Delete();
                case 15: return cc15.Delete();
                case 16: return cc16.Delete();
                case 17: return cc17.Delete();
                default: throw new InvalidOperationException("ver");
            }
        }
        public bool Load(object index) {
            object temp = index;
            switch (m_version) {
                case 12: return cc12.Load(ref temp);
                case 13: return cc13.Load(ref temp);
                case 14: return cc14.Load(ref temp);
                case 15: return cc15.Load(ref temp);
                case 16: return cc16.Load(ref temp);
                case 17: return cc17.Load(ref temp);
                default: throw new InvalidOperationException("ver");
            }
        }
        public bool Update() {
            switch (m_version) {
                case 12: return cc12.Update();
                case 13: return cc13.Update();
                case 14: return cc14.Update();
                case 15: return cc15.Update();
                case 16: return cc16.Update();
                case 17: return cc17.Update();
                default: throw new InvalidOperationException("ver");
            }
        }

        public int CostCodeID {
            get {
                switch (m_version) {
                    case 12: return cc12.CostCodeID;
                    case 13: return cc13.CostCodeID;
                    case 14: return cc14.CostCodeID;
                    case 15: return cc15.CostCodeID;
                    case 16: return cc16.CostCodeID;
                    case 17: return cc17.CostCodeID;
                    default: throw new InvalidOperationException("ver");
                }
            }

        }
        public string Reference {
            get {
                switch (m_version) {
                    case 12: return cc12.Reference;
                    case 13: return cc13.Reference;
                    case 14: return cc14.Reference;
                    case 15: return cc15.Reference;
                    case 16: return cc16.Reference;
                    case 17: return cc17.Reference;
                    default: throw new InvalidOperationException("ver");
                }
            }
        }
        public string Description {
            get {
                switch (m_version) {
                    case 12: return cc12.Description;
                    case 13: return cc13.Description;
                    case 14: return cc14.Description;
                    case 15: return cc15.Description;
                    case 16: return cc16.Description;
                    case 17: return cc17.Description;
                    default: throw new InvalidOperationException("ver");
                }
            }
        }


        public object Inner {
            get;
            private set;
        }

    }
}
