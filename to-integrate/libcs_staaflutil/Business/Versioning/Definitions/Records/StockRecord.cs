using System;
namespace Versioning
{
    public class StockRecord : Sage_Container, ILinkRecord
    {
        /* Autogenerated by sage_wrapper_generator.pl */
        SageDataObject110.StockRecord sr11;
        SageDataObject120.StockRecord sr12;
        SageDataObject130.StockRecord sr13;
        SageDataObject140.StockRecord sr14;
        SageDataObject150.StockRecord sr15;
        SageDataObject160.StockRecord sr16;
        SageDataObject170.StockRecord sr17;


        public StockRecord(object inner, int version)
            : base(version) {
            switch (m_version) {
                case 11: {
                        sr11 = (SageDataObject110.StockRecord)inner;
                        m_fields = new Fields(sr11.Fields,m_version);
                        return;
                    }

                case 12: {
                        sr12 = (SageDataObject120.StockRecord)inner;
                        m_fields = new Fields(sr12.Fields,m_version);
                        return;
                    }

                case 13: {
                        sr13 = (SageDataObject130.StockRecord)inner;
                        m_fields = new Fields(sr13.Fields,m_version);
                        return;
                    }

                case 14: {
                        sr14 = (SageDataObject140.StockRecord)inner;
                        m_fields = new Fields(sr14.Fields,m_version);
                        return;
                    }

                case 15: {
                        sr15 = (SageDataObject150.StockRecord)inner;
                        m_fields = new Fields(sr15.Fields,m_version);
                        return;
                    }
                case 16: {
                        sr16 = (SageDataObject160.StockRecord)inner;
                        m_fields = new Fields(sr16.Fields,m_version);
                        return;
                    }
                case 17: {
                        sr17 = (SageDataObject170.StockRecord)inner;
                        m_fields = new Fields(sr17.Fields,m_version);
                        return;
                    }

                default: throw new InvalidOperationException("ver");
            }
        }
        /* Autogenerated with record_generator.pl */
        const string STOCK_CODE = "STOCK_CODE";
        const string STOCKRECORD = "StockRecord";

        public override string Index_String {
            get {
                return STOCK_CODE;
            }
        }
        public bool AddNew() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.AddNew();
                        break;
                    }

                case 12: {
                        ret = sr12.AddNew();
                        break;
                    }

                case 13: {
                        ret = sr13.AddNew();
                        break;
                    }

                case 14: {
                        ret = sr14.AddNew();
                        break;
                    }

                case 15: {
                        ret = sr15.AddNew();
                        break;
                    }
                case 16: {
                        ret = sr16.AddNew();
                        break;
                    }
                case 17: {
                        ret = sr17.AddNew();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Update() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.Update();
                        break;
                    }

                case 12: {
                        ret = sr12.Update();
                        break;
                    }

                case 13: {
                        ret = sr13.Update();
                        break;
                    }

                case 14: {
                        ret = sr14.Update();
                        break;
                    }

                case 15: {
                        ret = sr15.Update();
                        break;
                    }
                case 16: {
                        ret = sr16.Update();
                        break;
                    }
                case 17: {
                        ret = sr17.Update();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Edit() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.Edit();
                        break;
                    }

                case 12: {
                        ret = sr12.Edit();
                        break;
                    }

                case 13: {
                        ret = sr13.Edit();
                        break;
                    }

                case 14: {
                        ret = sr14.Edit();
                        break;
                    }

                case 15: {
                        ret = sr15.Edit();
                        break;
                    }
                case 16: {
                        ret = sr16.Edit();
                        break;
                    }
                case 17: {
                        ret = sr17.Edit();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Find(bool partial) {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.Find(partial);
                        break;
                    }

                case 12: {
                        ret = sr12.Find(partial);
                        break;
                    }

                case 13: {
                        ret = sr13.Find(partial);
                        break;
                    }

                case 14: {
                        ret = sr14.Find(partial);
                        break;
                    }

                case 15: {
                        ret = sr15.Find(partial);
                        break;
                    }
                case 16: {
                        ret = sr16.Find(partial);
                        break;
                    }
                case 17: {
                        ret = sr17.Find(partial);
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveFirst() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.MoveFirst();
                        break;
                    }

                case 12: {
                        ret = sr12.MoveFirst();
                        break;
                    }

                case 13: {
                        ret = sr13.MoveFirst();
                        break;
                    }

                case 14: {
                        ret = sr14.MoveFirst();
                        break;
                    }

                case 15: {
                        ret = sr15.MoveFirst();
                        break;
                    }
                case 16: {
                        ret = sr16.MoveFirst();
                        break;
                    }
                case 17: {
                        ret = sr17.MoveFirst();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveNext() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.MoveNext();
                        break;
                    }

                case 12: {
                        ret = sr12.MoveNext();
                        break;
                    }

                case 13: {
                        ret = sr13.MoveNext();
                        break;
                    }

                case 14: {
                        ret = sr14.MoveNext();
                        break;
                    }

                case 15: {
                        ret = sr15.MoveNext();
                        break;
                    }
                case 16: {
                        ret = sr16.MoveNext();
                        break;
                    }
                case 17: {
                        ret = sr17.MoveNext();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveLast() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.MoveLast();
                        break;
                    }

                case 12: {
                        ret = sr12.MoveLast();
                        break;
                    }

                case 13: {
                        ret = sr13.MoveLast();
                        break;
                    }

                case 14: {
                        ret = sr14.MoveLast();
                        break;
                    }

                case 15: {
                        ret = sr15.MoveLast();
                        break;
                    }
                case 16: {
                        ret = sr16.MoveLast();
                        break;
                    }
                case 17: {
                        ret = sr17.MoveLast();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MovePrev() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.MovePrev();
                        break;
                    }

                case 12: {
                        ret = sr12.MovePrev();
                        break;
                    }

                case 13: {
                        ret = sr13.MovePrev();
                        break;
                    }

                case 14: {
                        ret = sr14.MovePrev();
                        break;
                    }

                case 15: {
                        ret = sr15.MovePrev();
                        break;
                    }
                case 16: {
                        ret = sr16.MovePrev();
                        break;
                    }
                case 17: {
                        ret = sr17.MovePrev();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool CanRemove() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.CanRemove();
                        break;
                    }

                case 12: {
                        ret = sr12.CanRemove();
                        break;
                    }

                case 13: {
                        ret = sr13.CanRemove();
                        break;
                    }

                case 14: {
                        ret = sr14.CanRemove();
                        break;
                    }

                case 15: {
                        ret = sr15.CanRemove();
                        break;
                    }
                case 16: {
                        ret = sr16.CanRemove();
                        break;
                    }
                case 17: {
                        ret = sr17.CanRemove();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Remove() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = sr11.Remove();
                        break;
                    }

                case 12: {
                        ret = sr12.Remove();
                        break;
                    }

                case 13: {
                        ret = sr13.Remove();
                        break;
                    }

                case 14: {
                        ret = sr14.Remove();
                        break;
                    }

                case 15: {
                        ret = sr15.Remove();
                        break;
                    }
                case 16: {
                        ret = sr16.Remove();
                        break;
                    }
                case 17: {
                        ret = sr17.Remove();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }

        object ILink.Link {
            get { return Link; }
        }

        public StockTran Link {
            get {
                object ret;
                switch (m_version) {
                    case 11: {
                            ret = sr11.Link;
                            break;
                        }

                    case 12: {
                            ret = sr12.Link;
                            break;
                        }

                    case 13: {
                            ret = sr13.Link;
                            break;
                        }

                    case 14: {
                            ret = sr14.Link;
                            break;
                        }

                    case 15: {
                            ret = sr15.Link;
                            break;
                        }
                    case 16: {
                            ret = sr16.Link;
                            break;
                        }
                    case 17: {
                            ret = sr17.Link;
                            break;
                        }

                    default: throw new InvalidOperationException("ver");
                }
                return new StockTran(ret, m_version);
            }
            //set {
            //    switch (m_version) {
            //    case 11: {
            //            sr11.Link = value;
            //            break;
            //        }

            //    case 12: {
            //            sr12.Link = value;
            //            break;
            //        }

            //    case 13: {
            //            sr13.Link = value;
            //            break;
            //        }

            //    case 14: {
            //            sr14.Link = value;
            //            break;
            //        }

            //    case 15: {
            //            sr15.Link = value;
            //            break;
            //        }
            //    case 16: {
            //            sr16.Link = value;
            //            break;
            //        }
            //    case 17: {
            //            sr17.Link = value;
            //            break;
            //        }

            //    }
            //}
        }

        public int Count {
            get {
                int ret;
                switch (m_version) {
                    case 11: {
                            ret = sr11.Count;
                            break;
                        }

                    case 12: {
                            ret = sr12.Count;
                            break;
                        }

                    case 13: {
                            ret = sr13.Count;
                            break;
                        }

                    case 14: {
                            ret = sr14.Count;
                            break;
                        }

                    case 15: {
                            ret = sr15.Count;
                            break;
                        }
                    case 16: {
                            ret = sr16.Count;
                            break;
                        }
                    case 17: {
                            ret = sr17.Count;
                            break;
                        }

                    default: throw new InvalidOperationException("ver");
                }
                return ret;
            }
            set {
                switch (m_version) {
                    case 11: {
                            sr11.Count = value;
                            break;
                        }

                    case 12: {
                            sr12.Count = value;
                            break;
                        }

                    case 13: {
                            sr13.Count = value;
                            break;
                        }

                    case 14: {
                            sr14.Count = value;
                            break;
                        }

                    case 15: {
                            sr15.Count = value;
                            break;
                        }
                    case 16: {
                            sr16.Count = value;
                            break;
                        }
                    case 17: {
                            sr17.Count = value;
                            break;
                        }
                    default: throw new InvalidOperationException("ver");
                }
            }
        }
    }
}
