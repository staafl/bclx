using System;
namespace Versioning
{
    public class RemittanceRecord : Sage_Container, ISageRecord
    {
        /* Autogenerated by sage_wrapper_generator.pl */
        SageDataObject110.RemittanceRecord rr11;
        SageDataObject120.RemittanceRecord rr12;
        SageDataObject130.RemittanceRecord rr13;
        SageDataObject140.RemittanceRecord rr14;
        SageDataObject150.RemittanceRecord rr15;
        SageDataObject160.RemittanceRecord rr16;
        SageDataObject170.RemittanceRecord rr17;


        public RemittanceRecord(object inner, int version)
            : base(version) {
            switch (m_version) {
                case 11: {
                        rr11 = (SageDataObject110.RemittanceRecord)inner;
                        m_fields = new Fields(rr11.Fields,m_version);
                        return;
                    }

                case 12: {
                        rr12 = (SageDataObject120.RemittanceRecord)inner;
                        m_fields = new Fields(rr12.Fields,m_version);
                        return;
                    }

                case 13: {
                        rr13 = (SageDataObject130.RemittanceRecord)inner;
                        m_fields = new Fields(rr13.Fields,m_version);
                        return;
                    }

                case 14: {
                        rr14 = (SageDataObject140.RemittanceRecord)inner;
                        m_fields = new Fields(rr14.Fields,m_version);
                        return;
                    }

                case 15: {
                        rr15 = (SageDataObject150.RemittanceRecord)inner;
                        m_fields = new Fields(rr15.Fields,m_version);
                        return;
                    }
                case 16: {
                        rr16 = (SageDataObject160.RemittanceRecord)inner;
                        m_fields = new Fields(rr16.Fields,m_version);
                        return;
                    }
                case 17: {
                        rr17 = (SageDataObject170.RemittanceRecord)inner;
                        m_fields = new Fields(rr17.Fields,m_version);
                        return;
                    }

                default: throw new InvalidOperationException("ver");
            }
        }

        /* Autogenerated with record_generator.pl */
        const string ACCOUNT_REF = "ACCOUNT_REF";
        const string REMITTANCERECORD = "RemittanceRecord";


        public bool AddNew() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.AddNew();
                        break;
                    }

                case 12: {
                        ret = rr12.AddNew();
                        break;
                    }

                case 13: {
                        ret = rr13.AddNew();
                        break;
                    }

                case 14: {
                        ret = rr14.AddNew();
                        break;
                    }

                case 15: {
                        ret = rr15.AddNew();
                        break;
                    }
                case 16: {
                        ret = rr16.AddNew();
                        break;
                    }
                case 17: {
                        ret = rr17.AddNew();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Update() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.Update();
                        break;
                    }

                case 12: {
                        ret = rr12.Update();
                        break;
                    }

                case 13: {
                        ret = rr13.Update();
                        break;
                    }

                case 14: {
                        ret = rr14.Update();
                        break;
                    }

                case 15: {
                        ret = rr15.Update();
                        break;
                    }
                case 16: {
                        ret = rr16.Update();
                        break;
                    }
                case 17: {
                        ret = rr17.Update();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Edit() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.Edit();
                        break;
                    }

                case 12: {
                        ret = rr12.Edit();
                        break;
                    }

                case 13: {
                        ret = rr13.Edit();
                        break;
                    }

                case 14: {
                        ret = rr14.Edit();
                        break;
                    }

                case 15: {
                        ret = rr15.Edit();
                        break;
                    }
                case 16: {
                        ret = rr16.Edit();
                        break;
                    }
                case 17: {
                        ret = rr17.Edit();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Find(bool partial) {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.Find(partial);
                        break;
                    }

                case 12: {
                        ret = rr12.Find(partial);
                        break;
                    }

                case 13: {
                        ret = rr13.Find(partial);
                        break;
                    }

                case 14: {
                        ret = rr14.Find(partial);
                        break;
                    }

                case 15: {
                        ret = rr15.Find(partial);
                        break;
                    }
                case 16: {
                        ret = rr16.Find(partial);
                        break;
                    }
                case 17: {
                        ret = rr17.Find(partial);
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveFirst() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.MoveFirst();
                        break;
                    }

                case 12: {
                        ret = rr12.MoveFirst();
                        break;
                    }

                case 13: {
                        ret = rr13.MoveFirst();
                        break;
                    }

                case 14: {
                        ret = rr14.MoveFirst();
                        break;
                    }

                case 15: {
                        ret = rr15.MoveFirst();
                        break;
                    }
                case 16: {
                        ret = rr16.MoveFirst();
                        break;
                    }
                case 17: {
                        ret = rr17.MoveFirst();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveNext() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.MoveNext();
                        break;
                    }

                case 12: {
                        ret = rr12.MoveNext();
                        break;
                    }

                case 13: {
                        ret = rr13.MoveNext();
                        break;
                    }

                case 14: {
                        ret = rr14.MoveNext();
                        break;
                    }

                case 15: {
                        ret = rr15.MoveNext();
                        break;
                    }
                case 16: {
                        ret = rr16.MoveNext();
                        break;
                    }
                case 17: {
                        ret = rr17.MoveNext();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveLast() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.MoveLast();
                        break;
                    }

                case 12: {
                        ret = rr12.MoveLast();
                        break;
                    }

                case 13: {
                        ret = rr13.MoveLast();
                        break;
                    }

                case 14: {
                        ret = rr14.MoveLast();
                        break;
                    }

                case 15: {
                        ret = rr15.MoveLast();
                        break;
                    }
                case 16: {
                        ret = rr16.MoveLast();
                        break;
                    }
                case 17: {
                        ret = rr17.MoveLast();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MovePrev() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.MovePrev();
                        break;
                    }

                case 12: {
                        ret = rr12.MovePrev();
                        break;
                    }

                case 13: {
                        ret = rr13.MovePrev();
                        break;
                    }

                case 14: {
                        ret = rr14.MovePrev();
                        break;
                    }

                case 15: {
                        ret = rr15.MovePrev();
                        break;
                    }
                case 16: {
                        ret = rr16.MovePrev();
                        break;
                    }
                case 17: {
                        ret = rr17.MovePrev();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Remove() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = rr11.Remove();
                        break;
                    }

                case 12: {
                        ret = rr12.Remove();
                        break;
                    }

                case 13: {
                        ret = rr13.Remove();
                        break;
                    }

                case 14: {
                        ret = rr14.Remove();
                        break;
                    }

                case 15: {
                        ret = rr15.Remove();
                        break;
                    }
                case 16: {
                        ret = rr16.Remove();
                        break;
                    }
                case 17: {
                        ret = rr17.Remove();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }

        public int Count {
            get {
                int ret;
                switch (m_version) {
                    case 11: {
                            ret = rr11.Count;
                            break;
                        }

                    case 12: {
                            ret = rr12.Count;
                            break;
                        }

                    case 13: {
                            ret = rr13.Count;
                            break;
                        }

                    case 14: {
                            ret = rr14.Count;
                            break;
                        }

                    case 15: {
                            ret = rr15.Count;
                            break;
                        }
                    case 16: {
                            ret = rr16.Count;
                            break;
                        }
                    case 17: {
                            ret = rr17.Count;
                            break;
                        }

                    default: throw new InvalidOperationException("ver");
                }
                return ret;
            }
            set {
                switch (m_version) {
                    case 11: {
                            rr11.Count = value;
                            break;
                        }

                    case 12: {
                            rr12.Count = value;
                            break;
                        }

                    case 13: {
                            rr13.Count = value;
                            break;
                        }

                    case 14: {
                            rr14.Count = value;
                            break;
                        }

                    case 15: {
                            rr15.Count = value;
                            break;
                        }
                    case 16: {
                            rr16.Count = value;
                            break;
                        }
                    case 17: {
                            rr17.Count = value;
                            break;
                        }
                    default: throw new InvalidOperationException("ver");
                }
            }
        }
    }
}
