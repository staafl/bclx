using System;
namespace Versioning
{
    public class NominalRecord : Sage_Container, ILinkRecord
    {
        /* Autogenerated by sage_wrapper_generator.pl */
        SageDataObject110.NominalRecord nr11;
        SageDataObject120.NominalRecord nr12;
        SageDataObject130.NominalRecord nr13;
        SageDataObject140.NominalRecord nr14;
        SageDataObject150.NominalRecord nr15;
        SageDataObject160.NominalRecord nr16;
        SageDataObject170.NominalRecord nr17;


        public NominalRecord(object inner, int version)
            : base(version) {
            switch (m_version) {
                case 11: {
                        nr11 = (SageDataObject110.NominalRecord)inner;
                        m_fields = new Fields(nr11.Fields,m_version);
                        return;
                    }

                case 12: {
                        nr12 = (SageDataObject120.NominalRecord)inner;
                        m_fields = new Fields(nr12.Fields,m_version);
                        return;
                    }

                case 13: {
                        nr13 = (SageDataObject130.NominalRecord)inner;
                        m_fields = new Fields(nr13.Fields,m_version);
                        return;
                    }

                case 14: {
                        nr14 = (SageDataObject140.NominalRecord)inner;
                        m_fields = new Fields(nr14.Fields,m_version);
                        return;
                    }

                case 15: {
                        nr15 = (SageDataObject150.NominalRecord)inner;
                        m_fields = new Fields(nr15.Fields,m_version);
                        return;
                    }
                case 16: {
                        nr16 = (SageDataObject160.NominalRecord)inner;
                        m_fields = new Fields(nr16.Fields,m_version);
                        return;
                    }
                case 17: {
                        nr17 = (SageDataObject170.NominalRecord)inner;
                        m_fields = new Fields(nr17.Fields,m_version);
                        return;
                    }

                default: throw new InvalidOperationException("ver");
            }
        }
        /* Autogenerated with record_generator.pl */
        const string ACCOUNT_REF = "ACCOUNT_REF";
        const string NOMINALRECORD = "NominalRecord";


        public bool AddNew() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.AddNew();
                        break;
                    }

                case 12: {
                        ret = nr12.AddNew();
                        break;
                    }

                case 13: {
                        ret = nr13.AddNew();
                        break;
                    }

                case 14: {
                        ret = nr14.AddNew();
                        break;
                    }

                case 15: {
                        ret = nr15.AddNew();
                        break;
                    }
                case 16: {
                        ret = nr16.AddNew();
                        break;
                    }
                case 17: {
                        ret = nr17.AddNew();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Update() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.Update();
                        break;
                    }

                case 12: {
                        ret = nr12.Update();
                        break;
                    }

                case 13: {
                        ret = nr13.Update();
                        break;
                    }

                case 14: {
                        ret = nr14.Update();
                        break;
                    }

                case 15: {
                        ret = nr15.Update();
                        break;
                    }
                case 16: {
                        ret = nr16.Update();
                        break;
                    }
                case 17: {
                        ret = nr17.Update();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Edit() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.Edit();
                        break;
                    }

                case 12: {
                        ret = nr12.Edit();
                        break;
                    }

                case 13: {
                        ret = nr13.Edit();
                        break;
                    }

                case 14: {
                        ret = nr14.Edit();
                        break;
                    }

                case 15: {
                        ret = nr15.Edit();
                        break;
                    }
                case 16: {
                        ret = nr16.Edit();
                        break;
                    }
                case 17: {
                        ret = nr17.Edit();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Find(bool partial) {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.Find(partial);
                        break;
                    }

                case 12: {
                        ret = nr12.Find(partial);
                        break;
                    }

                case 13: {
                        ret = nr13.Find(partial);
                        break;
                    }

                case 14: {
                        ret = nr14.Find(partial);
                        break;
                    }

                case 15: {
                        ret = nr15.Find(partial);
                        break;
                    }
                case 16: {
                        ret = nr16.Find(partial);
                        break;
                    }
                case 17: {
                        ret = nr17.Find(partial);
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool FindControlAccount(ControlTypes control) {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.FindControlAccount((SageDataObject110.ControlTypes)control);
                        break;
                    }

                case 12: {
                        ret = nr12.FindControlAccount((SageDataObject120.ControlTypes)control);
                        break;
                    }

                case 13: {
                        ret = nr13.FindControlAccount((SageDataObject130.ControlTypes)control);
                        break;
                    }

                case 14: {
                        ret = nr14.FindControlAccount((SageDataObject140.ControlTypes)control);
                        break;
                    }

                case 15: {
                        ret = nr15.FindControlAccount((SageDataObject150.ControlTypes)control);
                        break;
                    }
                case 16: {
                        ret = nr16.FindControlAccount((SageDataObject160.ControlTypes)control);
                        break;
                    }
                case 17: {
                        ret = nr17.FindControlAccount((SageDataObject170.ControlTypes)control);
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }

        public bool MajorControl {
            get {
                switch (m_version) {
                    case 11:
                        return nr11.MajorControl;
                    case 12:
                        return nr12.MajorControl;
                    case 13:
                        return nr13.MajorControl;
                    case 14:
                        return nr14.MajorControl;
                    case 15:
                        return nr15.MajorControl;
                    case 16:
                        return nr16.MajorControl;
                    case 17:
                        return nr17.MajorControl;
                    default: throw new InvalidOperationException("ver");
                }
            }
        }

        public bool MoveFirst() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.MoveFirst();
                        break;
                    }

                case 12: {
                        ret = nr12.MoveFirst();
                        break;
                    }

                case 13: {
                        ret = nr13.MoveFirst();
                        break;
                    }

                case 14: {
                        ret = nr14.MoveFirst();
                        break;
                    }

                case 15: {
                        ret = nr15.MoveFirst();
                        break;
                    }
                case 16: {
                        ret = nr16.MoveFirst();
                        break;
                    }
                case 17: {
                        ret = nr17.MoveFirst();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveNext() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.MoveNext();
                        break;
                    }

                case 12: {
                        ret = nr12.MoveNext();
                        break;
                    }

                case 13: {
                        ret = nr13.MoveNext();
                        break;
                    }

                case 14: {
                        ret = nr14.MoveNext();
                        break;
                    }

                case 15: {
                        ret = nr15.MoveNext();
                        break;
                    }
                case 16: {
                        ret = nr16.MoveNext();
                        break;
                    }
                case 17: {
                        ret = nr17.MoveNext();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MoveLast() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.MoveLast();
                        break;
                    }

                case 12: {
                        ret = nr12.MoveLast();
                        break;
                    }

                case 13: {
                        ret = nr13.MoveLast();
                        break;
                    }

                case 14: {
                        ret = nr14.MoveLast();
                        break;
                    }

                case 15: {
                        ret = nr15.MoveLast();
                        break;
                    }
                case 16: {
                        ret = nr16.MoveLast();
                        break;
                    }
                case 17: {
                        ret = nr17.MoveLast();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool MovePrev() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.MovePrev();
                        break;
                    }

                case 12: {
                        ret = nr12.MovePrev();
                        break;
                    }

                case 13: {
                        ret = nr13.MovePrev();
                        break;
                    }

                case 14: {
                        ret = nr14.MovePrev();
                        break;
                    }

                case 15: {
                        ret = nr15.MovePrev();
                        break;
                    }
                case 16: {
                        ret = nr16.MovePrev();
                        break;
                    }
                case 17: {
                        ret = nr17.MovePrev();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool CanRemove() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.CanRemove();
                        break;
                    }

                case 12: {
                        ret = nr12.CanRemove();
                        break;
                    }

                case 13: {
                        ret = nr13.CanRemove();
                        break;
                    }

                case 14: {
                        ret = nr14.CanRemove();
                        break;
                    }

                case 15: {
                        ret = nr15.CanRemove();
                        break;
                    }
                case 16: {
                        ret = nr16.CanRemove();
                        break;
                    }
                case 17: {
                        ret = nr17.CanRemove();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public bool Remove() {
            bool ret;
            switch (m_version) {
                case 11: {
                        ret = nr11.Remove();
                        break;
                    }

                case 12: {
                        ret = nr12.Remove();
                        break;
                    }

                case 13: {
                        ret = nr13.Remove();
                        break;
                    }

                case 14: {
                        ret = nr14.Remove();
                        break;
                    }

                case 15: {
                        ret = nr15.Remove();
                        break;
                    }
                case 16: {
                        ret = nr16.Remove();
                        break;
                    }
                case 17: {
                        ret = nr17.Remove();
                        break;
                    }

                default: throw new InvalidOperationException("ver");
            }
            return ret;
        }
        public object Link {
            get {
                object ret;
                switch (m_version) {
                    case 11: {
                            ret = nr11.Link;
                            break;
                        }

                    case 12: {
                            ret = nr12.Link;
                            break;
                        }

                    case 13: {
                            ret = nr13.Link;
                            break;
                        }

                    case 14: {
                            ret = nr14.Link;
                            break;
                        }

                    case 15: {
                            ret = nr15.Link;
                            break;
                        }
                    case 16: {
                            ret = nr16.Link;
                            break;
                        }
                    case 17: {
                            ret = nr17.Link;
                            break;
                        }

                    default: throw new InvalidOperationException("ver");
                }
                return ret;
            }
            set {
                switch (m_version) {
                    case 11: {
                            nr11.Link = value;
                            break;
                        }

                    case 12: {
                            nr12.Link = value;
                            break;
                        }

                    case 13: {
                            nr13.Link = value;
                            break;
                        }

                    case 14: {
                            nr14.Link = value;
                            break;
                        }

                    case 15: {
                            nr15.Link = value;
                            break;
                        }
                    case 16: {
                            nr16.Link = value;
                            break;
                        }
                    case 17: {
                            nr17.Link = value;
                            break;
                        }

                }
            }
        }

        public int Count {
            get {
                int ret;
                switch (m_version) {
                    case 11: {
                            ret = nr11.Count;
                            break;
                        }

                    case 12: {
                            ret = nr12.Count;
                            break;
                        }

                    case 13: {
                            ret = nr13.Count;
                            break;
                        }

                    case 14: {
                            ret = nr14.Count;
                            break;
                        }

                    case 15: {
                            ret = nr15.Count;
                            break;
                        }
                    case 16: {
                            ret = nr16.Count;
                            break;
                        }
                    case 17: {
                            ret = nr17.Count;
                            break;
                        }

                    default: throw new InvalidOperationException("ver");
                }
                return ret;
            }
            set {
                switch (m_version) {
                    case 11: {
                            nr11.Count = value;
                            break;
                        }

                    case 12: {
                            nr12.Count = value;
                            break;
                        }

                    case 13: {
                            nr13.Count = value;
                            break;
                        }

                    case 14: {
                            nr14.Count = value;
                            break;
                        }

                    case 15: {
                            nr15.Count = value;
                            break;
                        }
                    case 16: {
                            nr16.Count = value;
                            break;
                        }
                    case 17: {
                            nr17.Count = value;
                            break;
                        }
                    default: throw new InvalidOperationException("ver");
                }
            }
        }
    }
}
