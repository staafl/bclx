using System;
using System.Diagnostics;

namespace Common
{
    // autogenerated: D:\Scripts\struct_creator2.pl
    [Serializable]
    [DebuggerStepThrough]
    public struct Account_Record
    {

        public Account_Record(string account_ref,
                    string name,
                    int currency)
            : this() {

            this.Account_Ref = account_ref;
            this.Name = name;
            this.Currency = currency;
        }


        public string Account_Ref {
            get;
            set;
        }

        public string Name {
            get;
            set;
        }

        public int Currency {
            get;
            set;
        }



        /* Boilerplate */

        public override string ToString() {

            string ret = "";
            const string _null = "[null]";

#pragma warning disable 472


            ret += "Account_Ref = " + this.Account_Ref == null ? _null : this.Account_Ref.ToString();
            ret += ", ";
            ret += "Name = " + this.Name == null ? _null : this.Name.ToString();
            ret += ", ";
            ret += "Currency = " + this.Currency == null ? _null : this.Currency.ToString();


#pragma warning restore

            ret = "{Account_Record: " + ret + "}";
            return ret;

        }


        public bool Equals(Account_Record obj2) {

#pragma warning disable 472


            if (this.Account_Ref == null) {
                if (obj2.Account_Ref != null)
                    return false;
            }
            else if (!this.Account_Ref.Equals(obj2.Account_Ref)) {
                return false;
            }

            if (this.Name == null) {
                if (obj2.Name != null)
                    return false;
            }
            else if (!this.Name.Equals(obj2.Name)) {
                return false;
            }

            if (this.Currency == null) {
                if (obj2.Currency != null)
                    return false;
            }
            else if (!this.Currency.Equals(obj2.Currency)) {
                return false;
            }

#pragma warning restore
            return true;
        }


        public override bool Equals(object obj2) {

            if (obj2 == null)
                return false;

            if (!(obj2 is Account_Record))
                return false;

            var ret = this.Equals((Account_Record)obj2);

            return ret;

        }


        public static bool operator ==(Account_Record left, Account_Record right) {

            var ret = left.Equals(right);
            return ret;

        }


        public static bool operator !=(Account_Record left, Account_Record right) {

            var ret = !left.Equals(right);
            return ret;

        }


        public override int GetHashCode() {

#pragma warning disable 472
            unchecked {
                int ret = 23;
                int temp;


                if (this.Account_Ref != null) {
                    ret *= 31;
                    temp = this.Account_Ref.GetHashCode();
                    ret += temp;

                }

                if (this.Name != null) {
                    ret *= 31;
                    temp = this.Name.GetHashCode();
                    ret += temp;

                }

                if (this.Currency != null) {
                    ret *= 31;
                    temp = this.Currency.GetHashCode();
                    ret += temp;

                }

                return ret;

            } // unchecked block
#pragma warning restore
        } // method


    }


}
