using System;
using System.Diagnostics;
using Fairweather.Service;

namespace Common
{
    // autogenerated: D:\Scripts\struct_creator2.pl
    
    [Serializable]
    [DebuggerStepThrough]
    public struct Posting_Amounts
    {

        public Posting_Amounts(decimal total_receipts,
                    decimal total_discounts,
                    decimal total_usages,
                    decimal cheque_amount,
                    decimal payment_on_account)
            : this() {

            this.Total_Receipts = total_receipts;
            this.Total_Discounts = total_discounts;
            this.Total_Usages = total_usages;
            this.Cheque_Amount = cheque_amount;
            this.Payment_On_Account = payment_on_account;
        }


        public decimal Total_Receipts {
            get;
            set;
        }

        public decimal Total_Discounts {
            get;
            set;
        }

        public decimal Total_Usages {
            get;
            set;
        }

        public decimal Payment_On_Account {
            get;
            set;
        }

        public decimal Cheque_Amount {
            get;
            set;
        }


        /* Boilerplate */

        public override string ToString() {

            string ret = "";
            const string _null = "[null]";

#pragma warning disable 472


            ret += "Total_Receipts = " + this.Total_Receipts == null ? _null : this.Total_Receipts.ToString();
            ret += ", ";
            ret += "Total_Discounts = " + this.Total_Discounts == null ? _null : this.Total_Discounts.ToString();
            ret += ", ";
            ret += "Total_Usages = " + this.Total_Usages == null ? _null : this.Total_Usages.ToString();
            ret += ", ";
            ret += "Payment_On_Account = " + this.Payment_On_Account == null ? _null : this.Payment_On_Account.ToString();


#pragma warning restore

            ret = "{Posting_Amounts: " + ret + "}";
            return ret;

        }


        public bool Equals(Posting_Amounts obj2) {

#pragma warning disable 472


            if (this.Total_Receipts == null) {
                if (obj2.Total_Receipts != null)
                    return false;
            }
            else if (!this.Total_Receipts.Equals(obj2.Total_Receipts)) {
                return false;
            }

            if (this.Total_Discounts == null) {
                if (obj2.Total_Discounts != null)
                    return false;
            }
            else if (!this.Total_Discounts.Equals(obj2.Total_Discounts)) {
                return false;
            }

            if (this.Total_Usages == null) {
                if (obj2.Total_Usages != null)
                    return false;
            }
            else if (!this.Total_Usages.Equals(obj2.Total_Usages)) {
                return false;
            }

            if (this.Payment_On_Account == null) {
                if (obj2.Payment_On_Account != null)
                    return false;
            }
            else if (!this.Payment_On_Account.Equals(obj2.Payment_On_Account)) {
                return false;
            }

#pragma warning restore
            return true;
        }


        public override bool Equals(object obj2) {

            if (obj2 == null)
                return false;

            if (!(obj2 is Posting_Amounts))
                return false;

            var ret = this.Equals((Posting_Amounts)obj2);

            return ret;

        }


        public static bool operator ==(Posting_Amounts left, Posting_Amounts right) {

            var ret = left.Equals(right);
            return ret;

        }


        public static bool operator !=(Posting_Amounts left, Posting_Amounts right) {

            var ret = !left.Equals(right);
            return ret;

        }


        public override int GetHashCode() {

#pragma warning disable 472
            unchecked {
                int ret = 23;
                int temp;


                if (this.Total_Receipts != null) {
                    ret *= 31;
                    temp = this.Total_Receipts.GetHashCode();
                    ret += temp;

                }

                if (this.Total_Discounts != null) {
                    ret *= 31;
                    temp = this.Total_Discounts.GetHashCode();
                    ret += temp;

                }

                if (this.Total_Usages != null) {
                    ret *= 31;
                    temp = this.Total_Usages.GetHashCode();
                    ret += temp;

                }

                if (this.Payment_On_Account != null) {
                    ret *= 31;
                    temp = this.Payment_On_Account.GetHashCode();
                    ret += temp;

                }

                return ret;

            } // unchecked block
#pragma warning restore
        } // method


    }
}
