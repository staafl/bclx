using System;
using System.Diagnostics;
namespace Fairweather.Service
{
    // autogenerated: D:\Scripts\struct_creator2.pl
    [Serializable]
    [DebuggerStepThrough]
    public struct Switch
    {

        public Switch(string switch_string,
                      string switch_id,
                      string parameter)
            : this() {

            this.Switch_String = switch_string;
            this.Switch_Id = switch_id;
            this.Parameter = parameter;
        }


        public string Switch_String {
            get;
            private set;
        }

        public string Switch_Id {
            get;
            private set;
        }

        public string Parameter {
            get;
            private set;
        }



        /* Boilerplate */

        public override string ToString() {

            string ret = "";
            const string _null = "[null]";

#pragma warning disable 472


            ret += "Switch_String = " + this.Switch_String == null ? _null : this.Switch_String.ToString();
            ret += ", ";
            ret += "Switch_Id = " + this.Switch_Id == null ? _null : this.Switch_Id.ToString();
            ret += ", ";
            ret += "Parameter = " + this.Parameter == null ? _null : this.Parameter.ToString();


#pragma warning restore

            ret = "{Switch : " + ret + "}";
            return ret;

        }


        public bool Equals(Switch obj2) {

#pragma warning disable 472


            if (this.Switch_String == null) {
                if (obj2.Switch_String != null)
                    return false;
            }
            else if (!this.Switch_String.Equals(obj2.Switch_String)) {
                return false;
            }

            if (this.Switch_Id == null) {
                if (obj2.Switch_Id != null)
                    return false;
            }
            else if (!this.Switch_Id.Equals(obj2.Switch_Id)) {
                return false;
            }

            if (this.Parameter == null) {
                if (obj2.Parameter != null)
                    return false;
            }
            else if (!this.Parameter.Equals(obj2.Parameter)) {
                return false;
            }

#pragma warning restore
            return true;
        }


        public override bool Equals(object obj2) {

            if (obj2 == null)
                return false;

            if (!(obj2 is Switch))
                return false;

            var ret = this.Equals((Switch)obj2);

            return ret;

        }


        public static bool operator ==(Switch left, Switch right) {

            var ret = left.Equals(right);
            return ret;

        }


        public static bool operator !=(Switch left, Switch right) {

            var ret = !left.Equals(right);
            return ret;

        }


        public override int GetHashCode() {

#pragma warning disable 472
            unchecked {
                int ret = 23;
                int temp;


                if (this.Switch_String != null) {
                    ret *= 31;
                    temp = this.Switch_String.GetHashCode();
                    ret += temp;

                }

                if (this.Switch_Id != null) {
                    ret *= 31;
                    temp = this.Switch_Id.GetHashCode();
                    ret += temp;

                }

                if (this.Parameter != null) {
                    ret *= 31;
                    temp = this.Parameter.GetHashCode();
                    ret += temp;

                }

                return ret;

            } // unchecked block
#pragma warning restore
        } // method


    }
}
