using System;
using System.Diagnostics;

namespace Fairweather.Service
{
    // autogenerated: D:\Scripts\struct_creator2.pl
    [Serializable]
    [DebuggerStepThrough]
    public struct Ini_Field
    {

        Ini_Field(bool allow_blank)
            : this() {
            this.no_blank = !allow_blank;
        }

        /// <summary>
        /// Initializes a required Ini_Field.
        /// </summary>
        public Ini_Field(string field)
		: this(field, false) {
		}

        /// <summary>
        /// Initializes a required Ini_Field.
        /// </summary>
        public Ini_Field(string field, bool allow_blank)
            : this(allow_blank) {

            field = field.ToUpper();

            this.Field = field;
            this.Required = true;
        }

        /// <summary>
        /// Initializes an optional Ini_Field with the specified default value.
        /// </summary>
        public Ini_Field(string field, string default_value)
            : this(field, default_value, false) {
		}

        /// <summary>
        /// Initializes an optional Ini_Field with the specified default value.
        /// </summary>
        public Ini_Field(string field,
                         string default_value,
                         bool allow_blank)
            : this(allow_blank) {

            field = field.ToUpper();

            this.Field = field;
            this.Required = false;
            this.Default_Value = default_value;

        }


        readonly bool no_blank;

        /// <summary>
        /// Iff true, an empty value means ""
        /// else, an empty value means no value
        /// </summary>
        public bool Allow_Blank {
            get{
                return !no_blank;
            }
        }

        public string Field {
            get;
            set;
        }

        public bool Required {
            get;
            set;
        }

        public bool Optional {
            get {
                return !Required;
            }
        }

        public string Default_Value {
            get;
            set;
        }



        /* Boilerplate */

        public override string ToString() {

            string ret = "";
            const string _null = "[null]";

#pragma warning disable 472


            ret += "Field = " + this.Field == null ? _null : this.Field.ToString();
            ret += ", ";
            ret += "Required = " + this.Required == null ? _null : this.Required.ToString();
            ret += ", ";
            ret += "Default_Value = " + this.Default_Value == null ? _null : this.Default_Value.ToString();
            ret += ", ";
            ret += "Allow_Blank = " + this.Allow_Blank == null ? _null : this.Allow_Blank.ToString();


#pragma warning restore

            ret = "{Ini_Field: " + ret + "}";
            return ret;

        }


        public bool Equals(Ini_Field obj2) {

#pragma warning disable 472


            if (this.Field == null) {
                if (obj2.Field != null)
                    return false;
            }
            else if (!this.Field.Equals(obj2.Field)) {
                return false;
            }

            if (this.Required == null) {
                if (obj2.Required != null)
                    return false;
            }
            else if (!this.Required.Equals(obj2.Required)) {
                return false;
            }

            if (this.Default_Value == null) {
                if (obj2.Default_Value != null)
                    return false;
            }
            else if (!this.Default_Value.Equals(obj2.Default_Value)) {
                return false;
            }

            if (this.Allow_Blank == null) {
                if (obj2.Allow_Blank != null)
                    return false;
            }
            else if (!this.Allow_Blank.Equals(obj2.Allow_Blank)) {
                return false;
            }

#pragma warning restore
            return true;
        }


        public override bool Equals(object obj2) {

            if (obj2 == null)
                return false;

            if (!(obj2 is Ini_Field))
                return false;

            var ret = this.Equals((Ini_Field)obj2);

            return ret;

        }


        public static bool operator ==(Ini_Field left, Ini_Field right) {

            var ret = left.Equals(right);
            return ret;

        }


        public static bool operator !=(Ini_Field left, Ini_Field right) {

            var ret = !left.Equals(right);
            return ret;

        }


        public override int GetHashCode() {

#pragma warning disable 472
            unchecked {
                int ret = 23;
                int temp;


                if (this.Field != null) {
                    ret *= 31;
                    temp = this.Field.GetHashCode();
                    ret += temp;

                }

                if (this.Required != null) {
                    ret *= 31;
                    temp = this.Required.GetHashCode();
                    ret += temp;

                }

                if (this.Default_Value != null) {
                    ret *= 31;
                    temp = this.Default_Value.GetHashCode();
                    ret += temp;

                }

                if (this.Allow_Blank != null) {
                    ret *= 31;
                    temp = this.Allow_Blank.GetHashCode();
                    ret += temp;

                }

                return ret;

            } // unchecked block
#pragma warning restore
        } // method


    }
	
}
